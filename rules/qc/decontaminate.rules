# -*- mode: Snakemake -*-
#
# Decontamination rules
#
# Requires eclarke/decontam (fork for py3+ compatibility)

rule all_decontam:
    """Decontaminate all samples."""
    input:
        TARGET_DECONTAM

rule gunzip:
    input: str(QC_FP/'paired'/'{filename}.fastq.gz')
    output: temp(str(QC_FP/'paired'/'{filename}.fastq'))
    shell: "gunzip -c {input} > {output}"

rule decontam_human:
    input:
        r1 = str(QC_FP/'paired'/'{sample}_R1.fastq'),
        r2 = str(QC_FP/'paired'/'{sample}_R2.fastq')
    output:
        r1 = temp(str(QC_FP/'decontam-human'/'{sample}_R1.fastq')),
        r2 = temp(str(QC_FP/'decontam-human'/'{sample}_R2.fastq')),
        log = str(QC_FP/'log'/'decontam-human'/'{sample}_summary.json')
    params:
        out_fp = str(QC_FP/'decontam-human')
    threads:
        Cfg['qc']['threads']
    shell:
        """ 
        decontaminate.py --forward {input.r1} --reverse {input.r2} \
        --threads {threads} \
        --organism human \
        --method {Cfg[qc][method]} \
        --index {Cfg[qc][human_genome_fp]} \
        --summary-file {output.log} \
        --output-dir {params.out_fp} \
        """

rule decontam_phix:
    input:
        r1 = str(QC_FP/'decontam-human'/'{sample}_R1.fastq'),
        r2 = str(QC_FP/'decontam-human'/'{sample}_R2.fastq')
    output:
        r1 = temp(str(QC_FP/'decontam-phix'/'{sample}_R1.fastq')),
        r2 = temp(str(QC_FP/'decontam-phix'/'{sample}_R2.fastq')),
        log = str(QC_FP/'log'/'decontam'/'{sample}_summary.json')
    params:
        out_fp = str(QC_FP/'decontam-phix')
    threads:
        Cfg['qc']['threads']
    shell:
        """ 
        decontaminate.py --forward {input.r1} --reverse {input.r2} \
        --threads {threads} \
        --organism phix \
        --method {Cfg[qc][method]} \
        --index {Cfg[qc][phix_genome_fp]} \
        --summary-file {output.log} \
        --output-dir {params.out_fp}
        """

rule decontam:
    input:
        r1 = str(QC_FP/'decontam-phix'/'{sample}_R1.fastq'),
        r2 = str(QC_FP/'decontam-phix'/'{sample}_R2.fastq'),
    output:
        r1 = str(QC_FP/'decontam'/'{sample}_R1.fastq.gz'),
        r2 = str(QC_FP/'decontam'/'{sample}_R2.fastq.gz'),
    shell:
        """
        gzip -c {input.r1} > {output.r1}
        gzip -c {input.r2} > {output.r2}
        """
