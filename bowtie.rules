# -*- mode: Snakemake -*-
#
# Config file resources:
# {
#     'genomes_fp': 'path/to/genomes',
#     'bt2_index_fp': 'path/to/genomes/bt2_indices',
#     'subcores': int
# }


rule bt2_index:
    input:  lambda wildcard: Cfg['genomes_fp'][wildcard.genome]
    output: index_files('{genome}')
    params: index_out = expand('{index_fp}/{{genome}}', index_fp=Cfg['bt2_index_fp'])
    shell:
        "bowtie2-build {input} {params.index_out}"

rule bt2_map:
    input:
        lambda wildcards: index_files(wildcards.genome),
        r1 = lambda wildcards: Samples[wildcards.sample]['R1'],
        r2 = lambda wildcards: Samples[wildcards.sample]['R2']
    output:
        temp("{genome}/{sample}/reads.sam")
    params:
        idx = expand("{idx_fp}/{{genome}}", idx_fp=Cfg['bt2_index_fp']),
        cores = Cfg['subcores']        
    shell:
        "bowtie2 -x {params.idx} -1 {input.r1} -2 {input.r2} -S {output} -p {params.cores}"

rule sam_to_bam:
    input: "{genome}/{sample}/reads.sam"
    output: temp("{genome}/{sample}/reads.bam")
    shell: "samtools view -bS {input} > {output}"

rule sort_bam:
    input: "{genome}/{sample}/reads.bam"
    output: "{genome}/{sample}/reads.sorted.bam"
    params: prefix="{genome}/{sample}/reads.sorted"
    shell: "samtools sort {input} {params.prefix}"

rule index_bam:
    input: "{genome}/{sample}/reads.sorted.bam"
    output: "{genome}/{sample}/reads.sorted.bam.bai"
    shell: "samtools index {input}"

rule bam_stats:
    input:
        bam="{genome}/{sample}/reads.sorted.bam",
        bai="{genome}/{sample}/reads.sorted.bam.bai"
    output: "{genome}/{sample}/reads.stats"
    shell: "samtools stats {input.bam} > {output}"
